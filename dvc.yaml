stages:
  load_data: 
    cmd: python src/load_data.py --config=params.yaml
    deps: 
    - src/get_data_from_database.py
    - src/load_data.py
    - data_given/Metro_Interstate_Traffic_Volume.csv
    outs:
    - data/raw/traffic_data.csv

  validate_data:
    cmd: python src/validate_data.py --config=params.yaml
    deps: 
    - src/validate_data.py
    - data/raw/traffic_data.csv

  prepare_data:
    cmd: python src/prepare_data.py --config=params.yaml
    deps: 
    - src/prepare_data.py
    - data/raw/traffic_data.csv
    outs:
    - data/prepared/cleaned_traffic_data.csv
    - data/prepared/model_traffic_data.csv

  split_data:
    cmd: python src/split_data.py --config=params.yaml
    deps: 
    - src/split_data.py
    - data/prepared/model_traffic_data.csv
    outs:
    - data/processed/train_traffic_data.csv
    - data/processed/test_traffic_data.csv

  train_and_evaluate:
    cmd: python src/train_and_evaluate.py --config=params.yaml
    deps: 
    - src/train_and_evaluate.py
    - data/processed/train_traffic_data.csv
    - data/processed/test_traffic_data.csv
    params:
    - train_evaluate.estimators.XGBoostRegressor.params.min_samples_split
    - train_evaluate.estimators.XGBoostRegressor.params.min_samples_leaf
    - train_evaluate.estimators.XGBoostRegressor.params.max_depth
    metrics:
    - model_reports/scores.json:
        cache: false
    - model_reports/params.json:
        cache: false
    outs:
    - saved_models/model.joblib


  